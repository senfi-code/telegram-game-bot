import sqlite3

from aiogram import F, Router, Bot, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command, CommandObject
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

import application.keyboards as kb


transactions = Router()

conn = sqlite3.connect('database.db')
cursor = conn.cursor()


class Transfer(StatesGroup):
    transaction = State()
    summ = State()


@transactions.callback_query(F.data == "transaction")
async def bank(callback: CallbackQuery, state: FSMContext):
    await callback.answer("")
    await state.set_state(Transfer.transaction)

    await callback.message.answer("<b>üÜî –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏::</b>", parse_mode='HTML')


@transactions.message(Transfer.transaction)
async def bank_siz(message: Message, state: FSMContext):
    await state.update_data(transaction=message.text)

    try:
        transaction = int(message.text)
    
        global id_pay
        id_pay = message.text
        inf = cursor.execute(f"SELECT id FROM users WHERE id = {id_pay}").fetchone()
        if inf is None:
            await message.answer("<b>‚õîÔ∏è –î–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç !</b>", parse_mode='HTML')
        
        else:
            await state.set_state(Transfer.summ)
            await message.answer("<b>üíµ –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏:</b>", parse_mode='HTML')

    except ValueError:
        await message.answer("<b>üìõ –û—à–∏–±–∫–∞: 404 !</b>", parse_mode='HTML')


@transactions.message(Transfer.summ)
async def summ(message: Message, state: FSMContext, bot: Bot):
    await state.update_data(summ=message.text)

    bank_user = cursor.execute(f"SELECT bank FROM users WHERE id = {message.chat.id}").fetchone()

    try:
        sum = int(message.text)
    
        if int(message.text) < 1:
            await message.answer("<b>üî¥ –°—É–º–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ 1$ !</b>", parse_mode='HTML')
        else:
            if bank_user[0] < int(message.text):
                money_user = cursor.execute(f"SELECT money FROM users WHERE id = {message.chat.id}").fetchone()
                if money_user[0] >= int(message.text):
                    await message.answer("<b>üìâ –£ –≤–∞—Å –º–∞–ª–æ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–¥–∞—Ç—å !</b>", parse_mode='HTML')
                else:
                    await message.answer("<b>üòî –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Å—á–µ—Ç—É !</b>", parse_mode='HTML')

            else:
                cursor.execute(f"UPDATE users SET bank = bank - ? WHERE id = {message.chat.id}", (message.text, ))
                cursor.execute(f"UPDATE users SET bank = bank + ? WHERE id = {id_pay}", (message.text, ))

                await message.answer("<b>‚úÖ –£—Å–ø–µ—à–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ !</b>", parse_mode='HTML')
                await bot.send_message(id_pay, f"<blockquote><b>üì≤ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ —Å—á—ë—Ç !</b></blockquote>\n\n<b>üíµ –°—É–º–º–∞:</b> <code>{message.text} $AETH</code>\n<b>üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b> <code>{message.chat.id}</code>", parse_mode='HTML')
    
    except ValueError:
        await message.answer("<b>üìõ –û—à–∏–±–∫–∞: 404 !</b>", parse_mode='HTML')

    await state.clear()
    conn.commit()